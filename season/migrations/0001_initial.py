# Generated by Django 5.1.7 on 2025-09-05 19:52

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0002_alter_usergroup_access_code_alter_usergroup_members'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('season_games', models.PositiveSmallIntegerField(default=38)),
                ('tournament_id', models.PositiveIntegerField(unique=True)),
                ('season_id', models.PositiveIntegerField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StandingsBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taken_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('season_round', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('source', models.CharField(default='sofascore', max_length=40)),
            ],
            options={
                'ordering': ['-taken_at'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('entry_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=9)),
                ('status', models.CharField(choices=[('open', 'Open'), ('draft', 'Draft'), ('active', 'Active'), ('finished', 'Finished'), ('archived', 'Archived')], default='draft', max_length=12)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='season_games_created', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_game', to='groups.usergroup')),
            ],
        ),
        migrations.CreateModel(
            name='GameLeague',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_leagues', to='season.game')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='game_leagues', to='season.league')),
            ],
            options={
                'ordering': ['game', 'league__name'],
            },
        ),
        migrations.CreateModel(
            name='PlayerGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='season.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_player_games', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['game', 'user__username'],
            },
        ),
        migrations.CreateModel(
            name='PrizePool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('overall', 'Overall Position'), ('league_total', 'Best League Total'), ('teams_to_win', 'Best Teams to Win (with Handicap)'), ('teams_to_lose', 'Best Teams to Lose'), ('monthly_winner', 'Monthly Winner')], max_length=20)),
                ('name', models.CharField(help_text='Human label shown to users', max_length=120)),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prize_pools', to='season.game')),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prize_pools', to='season.league')),
            ],
            options={
                'ordering': ['game', 'category'],
            },
        ),
        migrations.CreateModel(
            name='PrizePayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=9)),
                ('prize_pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payouts', to='season.prizepool')),
            ],
            options={
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='PlayerScoreSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win_points', models.IntegerField(default=0)),
                ('handicap_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=7)),
                ('lose_points', models.IntegerField(default=0)),
                ('league_total_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8)),
                ('overall_total_points', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=9)),
                ('league_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('overall_rank', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game_league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_snapshots', to='season.gameleague')),
                ('player_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_snapshots', to='season.playergame')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_scores', to='season.standingsbatch')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=40)),
                ('sofascore_id', models.PositiveIntegerField(unique=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='season.league')),
            ],
            options={
                'ordering': ['league__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StandingsRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField()),
                ('played', models.PositiveSmallIntegerField()),
                ('wins', models.PositiveSmallIntegerField()),
                ('draws', models.PositiveSmallIntegerField()),
                ('losses', models.PositiveSmallIntegerField()),
                ('goals_for', models.PositiveSmallIntegerField(default=0)),
                ('goals_against', models.PositiveSmallIntegerField(default=0)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rows', to='season.standingsbatch')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings_rows', to='season.team')),
            ],
            options={
                'ordering': ['batch', 'position'],
            },
        ),
        migrations.CreateModel(
            name='PlayerPick',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pick_type', models.CharField(choices=[('win', 'Win Team'), ('handicap', 'Handicap Team'), ('lose', 'Lose Team')], max_length=10)),
                ('pick_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game_league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='picks', to='season.gameleague')),
                ('player_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='picks', to='season.playergame')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='picks', to='season.team')),
            ],
        ),
        migrations.CreateModel(
            name='Handicap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('game_league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handicaps', to='season.gameleague')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handicaps', to='season.team')),
            ],
            options={
                'ordering': ['game_league', 'team__name'],
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['status'], name='season_game_status_432b0d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='game',
            unique_together={('group', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='gameleague',
            unique_together={('game', 'league')},
        ),
        migrations.AlterUniqueTogether(
            name='playergame',
            unique_together={('game', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='prizepool',
            unique_together={('game', 'category', 'league')},
        ),
        migrations.AlterUniqueTogether(
            name='prizepayout',
            unique_together={('prize_pool', 'rank')},
        ),
        migrations.AddIndex(
            model_name='playerscoresnapshot',
            index=models.Index(fields=['batch', 'game_league'], name='season_play_batch_i_a6b393_idx'),
        ),
        migrations.AddIndex(
            model_name='playerscoresnapshot',
            index=models.Index(fields=['player_game', 'batch'], name='season_play_player__6fce74_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playerscoresnapshot',
            unique_together={('player_game', 'game_league', 'batch')},
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('league', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='standingsrow',
            unique_together={('batch', 'team')},
        ),
        migrations.AddIndex(
            model_name='playerpick',
            index=models.Index(fields=['game_league', 'pick_type'], name='season_play_game_le_2e8687_idx'),
        ),
        migrations.AddConstraint(
            model_name='playerpick',
            constraint=models.UniqueConstraint(fields=('game_league', 'pick_type', 'team'), name='unique_team_per_type_in_game_league'),
        ),
        migrations.AddConstraint(
            model_name='playerpick',
            constraint=models.UniqueConstraint(fields=('player_game', 'game_league', 'pick_type'), name='one_pick_per_type_per_league_per_player'),
        ),
        migrations.AlterUniqueTogether(
            name='handicap',
            unique_together={('game_league', 'team')},
        ),
    ]
